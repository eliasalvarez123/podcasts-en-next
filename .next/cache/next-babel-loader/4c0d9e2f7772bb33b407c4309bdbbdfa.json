{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport PodcastPlayer from '../components/PodcastPlayer';\nimport Error from './_error';\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openPodcast\", (event, podcast) => {\n      if (event.metaKey || event.ctrlKey || event.shiftKey || event.nativeEvent && event.nativeEvent.which === 2) {\n        // Si estÃ¡ haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n        return;\n      }\n\n      event.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _defineProperty(this, \"closePodcast\", event => {\n      event.preventDefault();\n      this.setState({\n        openPodcast: null\n      });\n    });\n\n    this.state = {\n      openPodcast: null\n    };\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const {\n      openPodcast\n    } = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title\n    }, openPodcast && __jsx(PodcastPlayer, {\n      clip: openPodcast,\n      onClose: this.closePodcast\n    }), __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-1404733386\" + \" \" + \"banner\"\n    }), __jsx(\"h1\", {\n      className: \"jsx-1404733386\"\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-1404733386\"\n    }, __jsx(\"h2\", {\n      className: \"jsx-1404733386\"\n    }, \"Series\"), __jsx(ChannelGrid, {\n      channels: series\n    })), __jsx(\"h2\", {\n      className: \"jsx-1404733386\"\n    }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast\n    }), __jsx(_JSXStyle, {\n      id: \"1404733386\"\n    }, \".banner.jsx-1404733386{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}h1.jsx-1404733386{font-weight:600;padding:15px;}h2.jsx-1404733386{padding:15px;font-size:1.2em;font-weight:600;margin:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxjdXJzb3MgcmVhY3RcXHBvZGNhc3RzXFxwYWdlc1xcY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RmtCLEFBR3NCLEFBT0ssQUFJSCxXQVZNLEVBV0gsR0FKSCxhQUNmLEFBSWtCLENBWFksZUFZbkIsU0FDWCxJQVp3QixzQkFDQSxzQkFDeEIiLCJmaWxlIjoiRDpcXGN1cnNvcyByZWFjdFxccG9kY2FzdHNcXHBhZ2VzXFxjaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJ1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0J1xyXG5pbXBvcnQgQ2hhbm5lbEdyaWQgZnJvbSAnLi4vY29tcG9uZW50cy9DaGFubmVsR3JpZCdcclxuaW1wb3J0IFBvZGNhc3RMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3QnXHJcbmltcG9ydCBQb2RjYXN0TGlzdFdpdGhDbGljayBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RMaXN0V2l0aENsaWNrJ1xyXG5pbXBvcnQgUG9kY2FzdFBsYXllciBmcm9tICcuLi9jb21wb25lbnRzL1BvZGNhc3RQbGF5ZXInXHJcbmltcG9ydCBFcnJvciBmcm9tICcuL19lcnJvcidcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKVxyXG4gICAgdGhpcy5zdGF0ZSA9IHsgb3BlblBvZGNhc3Q6IG51bGwgfVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGdldEluaXRpYWxQcm9wcyh7IHF1ZXJ5LCByZXMgfSkge1xyXG4gICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgbGV0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvc10gPSBhd2FpdCBQcm9taXNlLmFsbChbXHJcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9YCksXHJcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2NoaWxkX2NoYW5uZWxzYCksXHJcbiAgICAgICAgZmV0Y2goYGh0dHBzOi8vYXBpLmF1ZGlvYm9vbS5jb20vY2hhbm5lbHMvJHtpZENoYW5uZWx9L2F1ZGlvX2NsaXBzYClcclxuICAgICAgXSlcclxuXHJcbiAgICAgIGlmKCByZXFDaGFubmVsLnN0YXR1cyA+PSA0MDAgKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSByZXFDaGFubmVsLnN0YXR1c1xyXG4gICAgICAgIHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogcmVxQ2hhbm5lbC5zdGF0dXMgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICBsZXQgZGF0YUNoYW5uZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKVxyXG4gICAgICBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbFxyXG5cclxuICAgICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXHJcbiAgICAgIGxldCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvcy5ib2R5LmF1ZGlvX2NsaXBzXHJcblxyXG4gICAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKClcclxuICAgICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xyXG5cclxuICAgICAgcmV0dXJuIHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDAgfVxyXG4gICAgfSBjYXRjaChlKSB7XHJcbiAgICAgIHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogNTAzIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9wZW5Qb2RjYXN0ID0gKGV2ZW50LCBwb2RjYXN0KSA9PiB7XHJcbiAgICBpZiAoIGV2ZW50Lm1ldGFLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSB8fCAoZXZlbnQubmF0aXZlRXZlbnQgJiYgZXZlbnQubmF0aXZlRXZlbnQud2hpY2ggPT09IDIpICkge1xyXG4gICAgICAvLyBTaSBlc3TDoSBoYWNpZW5kbyBDdHJsK0NsaWNrIG8gQ21kK0NsaWNrLCBkZWphbW9zIHF1ZSBlbCBjbGljayBzdWNlZGEgbm9ybWFsbWVudGVcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIG9wZW5Qb2RjYXN0OiBwb2RjYXN0XHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgY2xvc2VQb2RjYXN0ID0gKGV2ZW50KSA9PiB7XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgb3BlblBvZGNhc3Q6IG51bGxcclxuICAgIH0pXHJcbiAgfVxyXG4gIFxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0gPSB0aGlzLnByb3BzXHJcbiAgICBjb25zdCB7IG9wZW5Qb2RjYXN0IH0gPSB0aGlzLnN0YXRlXHJcblxyXG4gICAgaWYoIHN0YXR1c0NvZGUgIT09IDIwMCApIHtcclxuICAgICAgcmV0dXJuIDxFcnJvciBzdGF0dXNDb2RlPXsgc3RhdHVzQ29kZSB9IC8+XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIDxMYXlvdXQgdGl0bGU9e2NoYW5uZWwudGl0bGV9PlxyXG5cclxuICAgICAgeyBvcGVuUG9kY2FzdCAmJiBcclxuICAgICAgICA8UG9kY2FzdFBsYXllciBjbGlwPXsgb3BlblBvZGNhc3QgfSBvbkNsb3NlPXsgdGhpcy5jbG9zZVBvZGNhc3QgfSAvPlxyXG4gICAgICB9XHJcblxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhbm5lclwiIHN0eWxlPXt7IGJhY2tncm91bmRJbWFnZTogYHVybCgke2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9KWAgfX0gLz5cclxuICAgICAgXHJcbiAgICAgIDxoMT57IGNoYW5uZWwudGl0bGUgfTwvaDE+XHJcblxyXG4gICAgICB7IHNlcmllcy5sZW5ndGggPiAwICYmXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxyXG4gICAgICAgICAgPENoYW5uZWxHcmlkIGNoYW5uZWxzPXsgc2VyaWVzIH0gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgfVxyXG5cclxuICAgICAgPGgyPlVsdGltb3MgUG9kY2FzdHM8L2gyPlxyXG4gICAgICA8UG9kY2FzdExpc3RXaXRoQ2xpY2sgcG9kY2FzdHM9eyBhdWRpb0NsaXBzIH0gb25DbGlja1BvZGNhc3Q9eyB0aGlzLm9wZW5Qb2RjYXN0IH0gLz5cclxuXHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAuYmFubmVyIHtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgcGFkZGluZy1ib3R0b206IDI1JTtcclxuICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2FhYTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDEge1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgyIHtcclxuICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICAgIGB9PC9zdHlsZT5cclxuICAgIDwvTGF5b3V0PlxyXG4gIH1cclxufVxyXG5pbmRleC5qc1xyXG5cclxuIl19 */\\n/*@ sourceURL=D:\\\\\\\\cursos react\\\\\\\\podcasts\\\\\\\\pages\\\\\\\\channel.js */\"));\n  }\n\n}\nindex.js;","map":{"version":3,"sources":["D:/cursos react/podcasts/pages/channel.js"],"names":["Layout","ChannelGrid","PodcastList","PodcastListWithClick","PodcastPlayer","Error","React","Component","constructor","props","event","podcast","metaKey","ctrlKey","shiftKey","nativeEvent","which","preventDefault","setState","openPodcast","state","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","status","statusCode","channel","audioClips","series","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","title","closePodcast","backgroundImage","urls","banner_image","original","length","index","js"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch'\r\nimport Layout from '../components/Layout'\r\nimport ChannelGrid from '../components/ChannelGrid'\r\nimport PodcastList from '../components/PodcastList'\r\nimport PodcastListWithClick from '../components/PodcastListWithClick'\r\nimport PodcastPlayer from '../components/PodcastPlayer'\r\nimport Error from './_error'\r\n\r\nexport default class extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { openPodcast: null }\r\n  }\r\n\r\n  static async getInitialProps({ query, res }) {\r\n    let idChannel = query.id\r\n\r\n    try {\r\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n      ])\r\n\r\n      if( reqChannel.status >= 400 ) {\r\n        res.statusCode = reqChannel.status\r\n        return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\r\n      }\r\n\r\n      let dataChannel = await reqChannel.json()\r\n      let channel = dataChannel.body.channel\r\n\r\n      let dataAudios = await reqAudios.json()\r\n      let audioClips = dataAudios.body.audio_clips\r\n\r\n      let dataSeries = await reqSeries.json()\r\n      let series = dataSeries.body.channels\r\n\r\n      return { channel, audioClips, series, statusCode: 200 }\r\n    } catch(e) {\r\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\r\n    }\r\n  }\r\n\r\n  openPodcast = (event, podcast) => {\r\n    if ( event.metaKey || event.ctrlKey || event.shiftKey || (event.nativeEvent && event.nativeEvent.which === 2) ) {\r\n      // Si estÃ¡ haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPodcast: podcast\r\n    })\r\n  }\r\n\r\n  closePodcast = (event) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPodcast: null\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const { channel, audioClips, series, statusCode } = this.props\r\n    const { openPodcast } = this.state\r\n\r\n    if( statusCode !== 200 ) {\r\n      return <Error statusCode={ statusCode } />\r\n    }\r\n\r\n    return <Layout title={channel.title}>\r\n\r\n      { openPodcast && \r\n        <PodcastPlayer clip={ openPodcast } onClose={ this.closePodcast } />\r\n      }\r\n\r\n      <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\r\n      \r\n      <h1>{ channel.title }</h1>\r\n\r\n      { series.length > 0 &&\r\n        <div>\r\n          <h2>Series</h2>\r\n          <ChannelGrid channels={ series } />\r\n        </div>\r\n      }\r\n\r\n      <h2>Ultimos Podcasts</h2>\r\n      <PodcastListWithClick podcasts={ audioClips } onClickPodcast={ this.openPodcast } />\r\n\r\n      <style jsx>{`\r\n        .banner {\r\n          width: 100%;\r\n          padding-bottom: 25%;\r\n          background-position: 50% 50%;\r\n          background-size: cover;\r\n          background-color: #aaa;\r\n        }\r\n        h1 {\r\n          font-weight: 600;\r\n          padding: 15px;\r\n        }\r\n        h2 {\r\n          padding: 15px;\r\n          font-size: 1.2em;\r\n          font-weight: 600;\r\n          margin: 0;\r\n        }\r\n      `}</style>\r\n    </Layout>\r\n  }\r\n}\r\nindex.js\r\n\r\n"]},"metadata":{},"sourceType":"module"}