{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Link } from '../routes';\nimport slug from '../helpers/slug';\n\nvar ChannelGrid = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChannelGrid, _React$Component);\n\n  var _super = _createSuper(ChannelGrid);\n\n  function ChannelGrid() {\n    _classCallCheck(this, ChannelGrid);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ChannelGrid, [{\n    key: \"render\",\n    value: function render() {\n      var channels = this.props.channels;\n      return __jsx(\"div\", {\n        className: \"jsx-4144732208\" + \" \" + \"channels\"\n      }, channels.map(function (channel) {\n        return __jsx(Link, {\n          route: \"channel\",\n          params: {\n            slug: 'placeholder',\n            id: channel.id\n          },\n          prefetch: true\n        }, __jsx(\"a\", {\n          className: \"jsx-4144732208\" + \" \" + \"channel\"\n        }, __jsx(\"img\", {\n          src: channel.urls.logo_image.original,\n          alt: \"\",\n          className: \"jsx-4144732208\"\n        }), __jsx(\"h2\", {\n          className: \"jsx-4144732208\"\n        }, channel.title)));\n      }), __jsx(_JSXStyle, {\n        id: \"4144732208\"\n      }, \".channels.jsx-4144732208{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-4144732208{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;}.channel.jsx-4144732208 img.jsx-4144732208{width:100%;}h2.jsx-4144732208{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxjdXJzb3MgcmVhY3RcXHBvZGNhc3RzXFxjb21wb25lbnRzXFxDaGFubmVsR3JpZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQndCLEFBSThCLEFBTUMsQUFRUCxBQUdDLFdBRlosQ0FHZ0IsQ0FqQkUsQ0FNSSxhQUxMLENBaUJELElBWDRCLFFBTG9CLElBaUJ2RCxTQUNTLGtCQUNsQixDQWJ3QixvQkFDeEIsTUFOQSIsImZpbGUiOiJEOlxcY3Vyc29zIHJlYWN0XFxwb2RjYXN0c1xcY29tcG9uZW50c1xcQ2hhbm5lbEdyaWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMaW5rIH0gZnJvbSAnLi4vcm91dGVzJ1xyXG5pbXBvcnQgc2x1ZyBmcm9tICcuLi9oZWxwZXJzL3NsdWcnXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoYW5uZWxHcmlkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG4gICAgcmVuZGVyKCl7XHJcbiAgICAgICAgY29uc3QgeyBjaGFubmVscyB9ID0gdGhpcy5wcm9wc1xyXG5cclxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJjaGFubmVsc1wiPlxyXG4gICAgICAgIHsgY2hhbm5lbHMubWFwKChjaGFubmVsKSA9PiAoXHJcbiAgICAgICAgICA8TGluayByb3V0ZT0nY2hhbm5lbCcgcGFyYW1zPXt7XHJcbiAgICAgICAgICAgIHNsdWc6ICdwbGFjZWhvbGRlcicsXHJcbiAgICAgICAgICAgIGlkOiBjaGFubmVsLmlkXHJcbiAgICAgICAgICB9fSBwcmVmZXRjaD5cclxuICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImNoYW5uZWxcIiA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXsgY2hhbm5lbC51cmxzLmxvZ29faW1hZ2Uub3JpZ2luYWwgfSBhbHQ9XCJcIi8+XHJcbiAgICAgICAgICAgIDxoMj57IGNoYW5uZWwudGl0bGUgfTwvaDI+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgKSkgfVxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG5cclxuICAgICAgICAgICAgLmNoYW5uZWxzIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgICAgICBncmlkLWdhcDogMTVweDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgxNjBweCwgMWZyKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNoYW5uZWwge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmNoYW5uZWwgaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaDIge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcblxyXG4gICAgICA8L2Rpdj5cclxuICAgIH1cclxufSJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\cursos react\\\\\\\\podcasts\\\\\\\\components\\\\\\\\ChannelGrid.js */\"));\n    }\n  }]);\n\n  return ChannelGrid;\n}(React.Component);\n\nexport { ChannelGrid as default };","map":{"version":3,"sources":["D:/cursos react/podcasts/components/ChannelGrid.js"],"names":["Link","slug","ChannelGrid","channels","props","map","channel","id","urls","logo_image","original","title","React","Component"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,WAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;IACqBC,W;;;;;;;;;;;;;6BACT;AAAA,UACIC,QADJ,GACiB,KAAKC,KADtB,CACID,QADJ;AAGJ,aAAO;AAAA,4CAAe;AAAf,SACLA,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD;AAAA,eACb,MAAC,IAAD;AAAM,UAAA,KAAK,EAAC,SAAZ;AAAsB,UAAA,MAAM,EAAE;AAC5BL,YAAAA,IAAI,EAAE,aADsB;AAE5BM,YAAAA,EAAE,EAAED,OAAO,CAACC;AAFgB,WAA9B;AAGG,UAAA,QAAQ;AAHX,WAIA;AAAA,8CAAa;AAAb,WACE;AAAK,UAAA,GAAG,EAAGD,OAAO,CAACE,IAAR,CAAaC,UAAb,CAAwBC,QAAnC;AAA8C,UAAA,GAAG,EAAC,EAAlD;AAAA;AAAA,UADF,EAEE;AAAA;AAAA,WAAMJ,OAAO,CAACK,KAAd,CAFF,CAJA,CADa;AAAA,OAAb,CADK;AAAA;AAAA,61FAAP;AA2CH;;;;EA/CoCC,KAAK,CAACC,S;;SAA1BX,W","sourcesContent":["import { Link } from '../routes'\r\nimport slug from '../helpers/slug'\r\nexport default class ChannelGrid extends React.Component{\r\n    render(){\r\n        const { channels } = this.props\r\n\r\n        return <div className=\"channels\">\r\n        { channels.map((channel) => (\r\n          <Link route='channel' params={{\r\n            slug: 'placeholder',\r\n            id: channel.id\r\n          }} prefetch>\r\n          <a className=\"channel\" >\r\n            <img src={ channel.urls.logo_image.original } alt=\"\"/>\r\n            <h2>{ channel.title }</h2>\r\n          </a>\r\n          </Link>\r\n        )) }\r\n\r\n            <style jsx>{`\r\n\r\n            .channels {\r\n                display: grid;\r\n                grid-gap: 15px;\r\n                padding: 15px;\r\n                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n            }\r\n            .channel {\r\n                display: block;\r\n                border-radius: 3px;\r\n                box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n                margin-bottom: 0.5em;\r\n            }\r\n\r\n            }\r\n            .channel img {\r\n            width: 100%;\r\n            }\r\n            h2 {\r\n            padding: 5px;\r\n            font-size: 0.9em;\r\n            font-weight: 600;\r\n            margin: 0;\r\n            text-align: center;\r\n            }\r\n\r\n            `}</style>\r\n\r\n      </div>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}