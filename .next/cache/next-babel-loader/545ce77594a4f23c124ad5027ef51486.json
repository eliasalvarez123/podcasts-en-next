{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'isomorphic-fetch';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastListWithClick from '../components/PodcastListWithClick';\nimport Error from './_error';\nimport PodcastsPlayer from '../components/PodcastPlayer';\n\nvar _default = /*#__PURE__*/function (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"openPoscats\", function (event, podcast) {\n      event.preventDefault();\n\n      _this.setState({\n        openPoscats: podcast\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ClosePodcast\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        openPoscats: null\n      });\n    });\n\n    _this.state = {\n      openPoscats: null\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series,\n          statusCode = _this$props.statusCode;\n      var openPoscats = this.state.openPoscats;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode\n        });\n      }\n\n      return __jsx(Layout, {\n        title: channel.title\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(channel.urls.banner_image.original, \")\")\n        },\n        className: \"jsx-3034638817\" + \" \" + \"banner\"\n      }), openPoscats && __jsx(\"div\", {\n        className: \"jsx-3034638817\" + \" \" + \"modal\"\n      }, __jsx(PodcastsPlayer, {\n        clip: openPoscats,\n        onClose: this.ClosePodcast\n      })), __jsx(\"h1\", {\n        className: \"jsx-3034638817\"\n      }, channel.title), series.length > 0 && __jsx(\"div\", {\n        className: \"jsx-3034638817\"\n      }, __jsx(\"h2\", {\n        className: \"jsx-3034638817\"\n      }, \"Series\"), __jsx(ChannelGrid, {\n        channels: series\n      })), __jsx(\"h2\", {\n        className: \"jsx-3034638817\"\n      }, \"Ultimos Podcasts\"), __jsx(PodcastListWithClick, {\n        podcasts: audioClips,\n        onClickPodcast: this.openPoscats\n      }), __jsx(_JSXStyle, {\n        id: \"3034638817\"\n      }, \".banner.jsx-3034638817{width:100%;padding-bottom:25%;background-position:50% 50%;background-size:cover;background-color:#aaa;}h1.jsx-3034638817{font-weight:600;padding:15px;}h2.jsx-3034638817{padding:15px;font-size:1.2em;font-weight:600;margin:0;}.modal.jsx-3034638817{position:fixed;top:0;left:0;right:0;bottom:0;z-index:99999;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxjdXJzb3MgcmVhY3RcXHBvZGNhc3RzXFxwYWdlc1xcY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RmtCLEFBR3NCLEFBT0ssQUFJSCxBQU9FLFdBakJJLEVBV0gsRUFPVixDQVhPLEtBWU4sT0FDQyxDQVpWLEFBSWtCLENBWFksTUFvQm5CLFNBUkEsQUFTSyxTQVJoQixJQVp3QixDQXFCeEIscUJBcEJ3QixzQkFDeEIiLCJmaWxlIjoiRDpcXGN1cnNvcyByZWFjdFxccG9kY2FzdHNcXHBhZ2VzXFxjaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJ1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL2NvbXBvbmVudHMvTGF5b3V0J1xyXG5pbXBvcnQgQ2hhbm5lbEdyaWQgZnJvbSAnLi4vY29tcG9uZW50cy9DaGFubmVsR3JpZCdcclxuaW1wb3J0IFBvZGNhc3RMaXN0V2l0aENsaWNrIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3RXaXRoQ2xpY2snXHJcbmltcG9ydCBFcnJvciBmcm9tICcuL19lcnJvcidcclxuaW1wb3J0IFBvZGNhc3RzUGxheWVyIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdFBsYXllcidcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvcHMpe1xyXG4gICAgc3VwZXIocHJvcHMpXHJcbiAgICB0aGlzLnN0YXRlID0ge29wZW5Qb3NjYXRzOiBudWxsIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSwgcmVzIH0pIHtcclxuICAgIGxldCBpZENoYW5uZWwgPSBxdWVyeS5pZFxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApLFxyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApXHJcbiAgICAgIF0pXHJcblxyXG4gICAgICBpZiggcmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDAwICkge1xyXG4gICAgICAgIHJlcy5zdGF0dXNDb2RlID0gcmVxQ2hhbm5lbC5zdGF0dXNcclxuICAgICAgICByZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IHJlcUNoYW5uZWwuc3RhdHVzIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcclxuICAgICAgbGV0IGNoYW5uZWwgPSBkYXRhQ2hhbm5lbC5ib2R5LmNoYW5uZWxcclxuXHJcbiAgICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxyXG4gICAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwc1xyXG5cclxuICAgICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpXHJcbiAgICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcclxuXHJcbiAgICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH1cclxuICAgIH0gY2F0Y2goZSkge1xyXG4gICAgICByZXR1cm4geyBjaGFubmVsOiBudWxsLCBhdWRpb0NsaXBzOiBudWxsLCBzZXJpZXM6IG51bGwsIHN0YXR1c0NvZGU6IDUwMyB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBvcGVuUG9zY2F0cyA9IChldmVudCwgcG9kY2FzdCkgPT57XHJcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbiAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgb3BlblBvc2NhdHM6IHBvZGNhc3RcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBDbG9zZVBvZGNhc3QgPSAoZXZlbnQpID0+e1xyXG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxyXG4gICAgdGhpcy5zZXRTdGF0ZSh7XHJcbiAgICAgIG9wZW5Qb3NjYXRzOiBudWxsXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSA9IHRoaXMucHJvcHNcclxuICAgIGNvbnN0IHsgb3BlblBvc2NhdHMgfSA9dGhpcy5zdGF0ZVxyXG5cclxuXHJcbiAgICBpZiggc3RhdHVzQ29kZSAhPT0gMjAwICkge1xyXG4gICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9eyBzdGF0dXNDb2RlIH0gLz5cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gPExheW91dCB0aXRsZT17Y2hhbm5lbC50aXRsZX0+XHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFubmVyXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbH0pYCB9fSAvPlxyXG4gICAgICBcclxuICAgICAgeyBvcGVuUG9zY2F0cyAmJiA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsXCI+XHJcbiAgICAgIDxQb2RjYXN0c1BsYXllciBjbGlwPXsgb3BlblBvc2NhdHMgfSBvbkNsb3NlPXsgdGhpcy5DbG9zZVBvZGNhc3QgfVxyXG4gICAgICAgIC8+PC9kaXY+fVxyXG5cclxuICAgICAgPGgxPnsgY2hhbm5lbC50aXRsZSB9PC9oMT5cclxuXHJcbiAgICAgIHsgc2VyaWVzLmxlbmd0aCA+IDAgJiZcclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPGgyPlNlcmllczwvaDI+XHJcbiAgICAgICAgICA8Q2hhbm5lbEdyaWQgY2hhbm5lbHM9eyBzZXJpZXMgfSAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICB9XHJcblxyXG4gICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0czwvaDI+XHJcbiAgICAgIDxQb2RjYXN0TGlzdFdpdGhDbGljayBwb2RjYXN0cz17IGF1ZGlvQ2xpcHMgfVxyXG4gICAgICAgIG9uQ2xpY2tQb2RjYXN0PXt0aGlzLm9wZW5Qb3NjYXRzfSAvPlxyXG5cclxuICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgIC5iYW5uZXIge1xyXG4gICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjUlO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcclxuICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWFhO1xyXG4gICAgICAgIH1cclxuICAgICAgICBoMSB7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaDIge1xyXG4gICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAubW9kYWwge1xyXG4gICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgei1pbmRleDogOTk5OTk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9MYXlvdXQ+XHJcbiAgfVxyXG59Il19 */\\n/*@ sourceURL=D:\\\\\\\\cursos react\\\\\\\\podcasts\\\\\\\\pages\\\\\\\\channel.js */\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, res, idChannel, _await$Promise$all, _await$Promise$all2, reqChannel, reqSeries, reqAudios, dataChannel, channel, dataAudios, audioClips, dataSeries, series;\n\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query, res = _ref.res;\n              idChannel = query.id;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\"))]));\n\n            case 5:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 3);\n              reqChannel = _await$Promise$all2[0];\n              reqSeries = _await$Promise$all2[1];\n              reqAudios = _await$Promise$all2[2];\n\n              if (!(reqChannel.status >= 400)) {\n                _context.next = 13;\n                break;\n              }\n\n              res.statusCode = reqChannel.status;\n              return _context.abrupt(\"return\", {\n                channel: null,\n                audioClips: null,\n                series: null,\n                statusCode: reqChannel.status\n              });\n\n            case 13:\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(reqChannel.json());\n\n            case 15:\n              dataChannel = _context.sent;\n              channel = dataChannel.body.channel;\n              _context.next = 19;\n              return _regeneratorRuntime.awrap(reqAudios.json());\n\n            case 19:\n              dataAudios = _context.sent;\n              audioClips = dataAudios.body.audio_clips;\n              _context.next = 23;\n              return _regeneratorRuntime.awrap(reqSeries.json());\n\n            case 23:\n              dataSeries = _context.sent;\n              series = dataSeries.body.channels;\n              return _context.abrupt(\"return\", {\n                channel: channel,\n                audioClips: audioClips,\n                series: series,\n                statusCode: 200\n              });\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", {\n                channel: null,\n                audioClips: null,\n                series: null,\n                statusCode: 503\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 28]], Promise);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["D:/cursos react/podcasts/pages/channel.js"],"names":["Layout","ChannelGrid","PodcastListWithClick","Error","PodcastsPlayer","props","event","podcast","preventDefault","setState","openPoscats","state","channel","audioClips","series","statusCode","title","backgroundImage","urls","banner_image","original","ClosePodcast","length","query","res","idChannel","id","Promise","all","fetch","reqChannel","reqSeries","reqAudios","status","json","dataChannel","body","dataAudios","audio_clips","dataSeries","channels","React","Component"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch'\r\nimport Layout from '../components/Layout'\r\nimport ChannelGrid from '../components/ChannelGrid'\r\nimport PodcastListWithClick from '../components/PodcastListWithClick'\r\nimport Error from './_error'\r\nimport PodcastsPlayer from '../components/PodcastPlayer'\r\n\r\nexport default class extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {openPoscats: null }\r\n  }\r\n\r\n  static async getInitialProps({ query, res }) {\r\n    let idChannel = query.id\r\n\r\n    try {\r\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n      ])\r\n\r\n      if( reqChannel.status >= 400 ) {\r\n        res.statusCode = reqChannel.status\r\n        return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\r\n      }\r\n\r\n      let dataChannel = await reqChannel.json()\r\n      let channel = dataChannel.body.channel\r\n\r\n      let dataAudios = await reqAudios.json()\r\n      let audioClips = dataAudios.body.audio_clips\r\n\r\n      let dataSeries = await reqSeries.json()\r\n      let series = dataSeries.body.channels\r\n\r\n      return { channel, audioClips, series, statusCode: 200 }\r\n    } catch(e) {\r\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\r\n    }\r\n  }\r\n\r\n  openPoscats = (event, podcast) =>{\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPoscats: podcast\r\n    })\r\n  }\r\n\r\n  ClosePodcast = (event) =>{\r\n    event.preventDefault()\r\n    this.setState({\r\n      openPoscats: null\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { channel, audioClips, series, statusCode } = this.props\r\n    const { openPoscats } =this.state\r\n\r\n\r\n    if( statusCode !== 200 ) {\r\n      return <Error statusCode={ statusCode } />\r\n    }\r\n\r\n    return <Layout title={channel.title}>\r\n      <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\r\n      \r\n      { openPoscats && <div className=\"modal\">\r\n      <PodcastsPlayer clip={ openPoscats } onClose={ this.ClosePodcast }\r\n        /></div>}\r\n\r\n      <h1>{ channel.title }</h1>\r\n\r\n      { series.length > 0 &&\r\n        <div>\r\n          <h2>Series</h2>\r\n          <ChannelGrid channels={ series } />\r\n        </div>\r\n      }\r\n\r\n      <h2>Ultimos Podcasts</h2>\r\n      <PodcastListWithClick podcasts={ audioClips }\r\n        onClickPodcast={this.openPoscats} />\r\n\r\n      <style jsx>{`\r\n        .banner {\r\n          width: 100%;\r\n          padding-bottom: 25%;\r\n          background-position: 50% 50%;\r\n          background-size: cover;\r\n          background-color: #aaa;\r\n        }\r\n        h1 {\r\n          font-weight: 600;\r\n          padding: 15px;\r\n        }\r\n        h2 {\r\n          padding: 15px;\r\n          font-size: 1.2em;\r\n          font-weight: 600;\r\n          margin: 0;\r\n        }\r\n        \r\n        .modal {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          right: 0;\r\n          bottom: 0;\r\n          z-index: 99999;\r\n        }\r\n\r\n      `}</style>\r\n    </Layout>\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}