{"ast":null,"code":"var _jsxFileName = \"D:\\\\cursos react\\\\podcasts\\\\pages\\\\channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Error from 'next/error';\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastsList from '../components/PodcastList';\nexport default class extends React.Component {\n  static async getInitialProps({\n    query\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 404) {\n        return {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audioClips = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }\n    }, __jsx(\"header\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Podcasts\"), __jsx(\"div\", {\n      style: {\n        backgroundImage: `url(${channel.urls.banner_image.original})`\n      },\n      className: \"jsx-88979864\" + \" \" + \"banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), __jsx(\"h1\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(\"h2\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Series\"), __jsx(\"div\", {\n      className: \"jsx-88979864\" + \" \" + \"channels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, series.map(serie => __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      prefetch: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-88979864\" + \" \" + \"channel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: serie.urls.logo_image.original,\n      alt: \"\",\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }), __jsx(\"h2\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, serie.title)))))), __jsx(\"h2\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, \"Ultimos Podcasts\"), audioClips.map(clip => __jsx(Link, {\n      href: `/podcast?id=${clip.id}`,\n      prefetch: true,\n      key: clip.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      className: \"jsx-88979864\" + \" \" + 'podcast',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, __jsx(\"h3\", {\n      className: \"jsx-88979864\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, clip.title), __jsx(\"div\", {\n      className: \"jsx-88979864\" + \" \" + 'meta',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, Math.ceil(clip.duration / 60), \" minutes\")))), __jsx(_JSXStyle, {\n      id: \"877123454\",\n      __self: this\n    }, \"header.jsx-88979864{color:#fff;background:#8756ca;padding:15px;}.channels.jsx-88979864{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat(auto-fill,minmax(160px,1fr));}.channel.jsx-88979864{display:block;border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);margin-bottom:0.5em;}.channel.jsx-88979864 img.jsx-88979864{width:100%;}h1.jsx-88979864{font-weight:600;padding:15px;}h2.jsx-88979864{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxjdXJzb3MgcmVhY3RcXHBvZGNhc3RzXFxwYWdlc1xcY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRm9CLEFBR21CLEFBS0csQUFNQyxBQVFULEFBR08sQUFJTixXQXpCYSxBQW1CM0IsQ0FPa0IsQ0FyQkksQ0FNSSxFQVdULFdBaEJJLENBcUJILENBSmxCLENBdEJxQixFQVcyQixRQUxvQixHQUxoRSxDQTBCTyxTQUNTLGtCQUNwQixDQWpCNEIsb0JBQ3hCLE1BTkUiLCJmaWxlIjoiRDpcXGN1cnNvcyByZWFjdFxccG9kY2FzdHNcXHBhZ2VzXFxjaGFubmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVycm9yIGZyb20gJ25leHQvZXJyb3InXHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcclxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCdcclxuaW1wb3J0IENoYW5uZWxHcmlkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2hhbm5lbEdyaWQnXHJcbmltcG9ydCBQb2RjYXN0c0xpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0TGlzdCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50e1xyXG5cclxuICAgIHN0YXRpYyBhc3luYyBnZXRJbml0aWFsUHJvcHMoeyBxdWVyeSB9KSB7XHJcbiAgICBsZXQgaWRDaGFubmVsID0gcXVlcnkuaWRcclxuXHJcbiAgICB0cnkge1xyXG5cclxuICAgIGxldCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb3NdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2ApLFxyXG4gICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9hdWRpb19jbGlwc2ApXHJcbiAgICBdKVxyXG5cclxuICAgIGlmKCByZXFDaGFubmVsLnN0YXR1cyA+PSA0MDQgKXtcclxuICAgICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiByZXFDaGFubmVsLnN0YXR1cyB9XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGRhdGFDaGFubmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKClcclxuICAgIGxldCBjaGFubmVsID0gZGF0YUNoYW5uZWwuYm9keS5jaGFubmVsXHJcblxyXG4gICAgbGV0IGRhdGFBdWRpb3MgPSBhd2FpdCByZXFBdWRpb3MuanNvbigpXHJcbiAgICBsZXQgYXVkaW9DbGlwcyA9IGRhdGFBdWRpb3MuYm9keS5hdWRpb19jbGlwc1xyXG5cclxuICAgIGxldCBkYXRhU2VyaWVzID0gYXdhaXQgcmVxU2VyaWVzLmpzb24oKVxyXG4gICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVsc1xyXG5cclxuICAgIHJldHVybiB7IGNoYW5uZWwsIGF1ZGlvQ2xpcHMsIHNlcmllcywgc3RhdHVzQ29kZTogMjAwIH1cclxuICAgIH1jYXRjaChlKXtcclxuICAgICAgcmV0dXJuIHsgY2hhbm5lbDogbnVsbCwgYXVkaW9DbGlwczogbnVsbCwgc2VyaWVzOiBudWxsLCBzdGF0dXNDb2RlOiA1MDMgfVxyXG4gICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKXtcclxuICAgICAgY29uc3QgeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGUgfSA9dGhpcy5wcm9wc1xyXG5cclxuICAgICAgaWYoIHN0YXR1c0NvZGUgIT09IDIwMCApe1xyXG4gICAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz5cclxuICAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiA8ZGl2PlxyXG4gICAgICAgIDxoZWFkZXI+UG9kY2FzdHM8L2hlYWRlcj5cclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiYW5uZXJcIiBzdHlsZT17eyBiYWNrZ3JvdW5kSW1hZ2U6IGB1cmwoJHtjaGFubmVsLnVybHMuYmFubmVyX2ltYWdlLm9yaWdpbmFsfSlgIH19IC8+XHJcblxyXG4gICAgICA8aDE+eyBjaGFubmVsLnRpdGxlIH08L2gxPlxyXG5cclxuICAgICAgeyBzZXJpZXMubGVuZ3RoID4gMCAmJlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8aDI+U2VyaWVzPC9oMj5cclxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY2hhbm5lbHNcIj5cclxuICAgICAgICAgICAgeyBzZXJpZXMubWFwKChzZXJpZSkgPT4gKFxyXG4gICAgICAgICAgICAgIDxMaW5rIGhyZWY9e2AvY2hhbm5lbD9pZD0keyBzZXJpZS5pZCB9YH0gcHJlZmV0Y2g+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9XCJjaGFubmVsXCI+XHJcbiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPXsgc2VyaWUudXJscy5sb2dvX2ltYWdlLm9yaWdpbmFsIH0gYWx0PVwiXCIvPlxyXG4gICAgICAgICAgICAgICAgICA8aDI+eyBzZXJpZS50aXRsZSB9PC9oMj5cclxuICAgICAgICAgICAgICAgIDwvYT5cclxuICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICkpfVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cclxuICAgICAgeyBhdWRpb0NsaXBzLm1hcCgoY2xpcCkgPT4gKFxyXG4gICAgICAgIDxMaW5rIGhyZWY9e2AvcG9kY2FzdD9pZD0ke2NsaXAuaWR9YH0gcHJlZmV0Y2gga2V5PXtjbGlwLmlkfT5cclxuICAgICAgICAgIDxhIGNsYXNzTmFtZT0ncG9kY2FzdCc+XHJcbiAgICAgICAgICAgIDxoMz57IGNsaXAudGl0bGUgfTwvaDM+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdtZXRhJz5cclxuICAgICAgICAgICAgICB7IE1hdGguY2VpbChjbGlwLmR1cmF0aW9uIC8gNjApIH0gbWludXRlc1xyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDwvYT5cclxuICAgICAgICA8L0xpbms+XHJcbiAgICAgICkpfVxyXG5cclxuXHJcbiAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgaGVhZGVye1xyXG4gICAgICAgIGNvbG9yOiNmZmY7XHJcbiAgICAgICAgYmFja2dyb3VuZDogIzg3NTZjYTtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gICAgLmNoYW5uZWxzIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIGdyaWQtZ2FwOiAxNXB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maWxsLCBtaW5tYXgoMTYwcHgsIDFmcikpO1xyXG4gICAgICB9XHJcbiAgICAuY2hhbm5lbCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNnB4IHJnYmEoMCwwLDAsMC4xNSk7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XHJcbiAgICB9XHJcblxyXG59XHJcbi5jaGFubmVsIGltZyB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuaDF7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgcGFkZGluZzogMTVweDtcclxufVxyXG5oMiB7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIGZvbnQtc2l6ZTogMC45ZW07XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBtYXJnaW46IDA7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4gICAgYH08L3N0eWxlPlxyXG4gICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAgIGJvZHkge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgIGB9PC9zdHlsZT5cclxuICAgPC9kaXY+XHJcbiAgICBcclxufVxyXG59Il19 */\\n/*@ sourceURL=D:\\\\\\\\cursos react\\\\\\\\podcasts\\\\\\\\pages\\\\\\\\channel.js */\"), __jsx(_JSXStyle, {\n      id: \"3228651055\",\n      __self: this\n    }, \"body{margin:0;font-family:system-ui;background:white;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxjdXJzb3MgcmVhY3RcXHBvZGNhc3RzXFxwYWdlc1xcY2hhbm5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxSHVCLEFBR2tCLFNBQ2Esc0JBQ0wsaUJBQ0Msa0JBQ3RCIiwiZmlsZSI6IkQ6XFxjdXJzb3MgcmVhY3RcXHBvZGNhc3RzXFxwYWdlc1xcY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFcnJvciBmcm9tICduZXh0L2Vycm9yJ1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXHJcbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnXHJcbmltcG9ydCBDaGFubmVsR3JpZCBmcm9tICcuLi9jb21wb25lbnRzL0NoYW5uZWxHcmlkJ1xyXG5pbXBvcnQgUG9kY2FzdHNMaXN0IGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdExpc3QnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgZ2V0SW5pdGlhbFByb3BzKHsgcXVlcnkgfSkge1xyXG4gICAgbGV0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkXHJcblxyXG4gICAgdHJ5IHtcclxuXHJcbiAgICBsZXQgW3JlcUNoYW5uZWwsIHJlcVNlcmllcywgcmVxQXVkaW9zXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKVxyXG4gICAgXSlcclxuXHJcbiAgICBpZiggcmVxQ2hhbm5lbC5zdGF0dXMgPj0gNDA0ICl7XHJcbiAgICAgIHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogcmVxQ2hhbm5lbC5zdGF0dXMgfVxyXG4gICAgfVxyXG5cclxuICAgIGxldCBkYXRhQ2hhbm5lbCA9IGF3YWl0IHJlcUNoYW5uZWwuanNvbigpXHJcbiAgICBsZXQgY2hhbm5lbCA9IGRhdGFDaGFubmVsLmJvZHkuY2hhbm5lbFxyXG5cclxuICAgIGxldCBkYXRhQXVkaW9zID0gYXdhaXQgcmVxQXVkaW9zLmpzb24oKVxyXG4gICAgbGV0IGF1ZGlvQ2xpcHMgPSBkYXRhQXVkaW9zLmJvZHkuYXVkaW9fY2xpcHNcclxuXHJcbiAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKClcclxuICAgIGxldCBzZXJpZXMgPSBkYXRhU2VyaWVzLmJvZHkuY2hhbm5lbHNcclxuXHJcbiAgICByZXR1cm4geyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMsIHN0YXR1c0NvZGU6IDIwMCB9XHJcbiAgICB9Y2F0Y2goZSl7XHJcbiAgICAgIHJldHVybiB7IGNoYW5uZWw6IG51bGwsIGF1ZGlvQ2xpcHM6IG51bGwsIHNlcmllczogbnVsbCwgc3RhdHVzQ29kZTogNTAzIH1cclxuICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCl7XHJcbiAgICAgIGNvbnN0IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlIH0gPXRoaXMucHJvcHNcclxuXHJcbiAgICAgIGlmKCBzdGF0dXNDb2RlICE9PSAyMDAgKXtcclxuICAgICAgICByZXR1cm4gPEVycm9yIHN0YXR1c0NvZGU9e3N0YXR1c0NvZGV9IC8+XHJcbiAgICAgICAgIH1cclxuICAgICAgICByZXR1cm4gPGRpdj5cclxuICAgICAgICA8aGVhZGVyPlBvZGNhc3RzPC9oZWFkZXI+XHJcblxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmFubmVyXCIgc3R5bGU9e3sgYmFja2dyb3VuZEltYWdlOiBgdXJsKCR7Y2hhbm5lbC51cmxzLmJhbm5lcl9pbWFnZS5vcmlnaW5hbH0pYCB9fSAvPlxyXG5cclxuICAgICAgPGgxPnsgY2hhbm5lbC50aXRsZSB9PC9oMT5cclxuXHJcbiAgICAgIHsgc2VyaWVzLmxlbmd0aCA+IDAgJiZcclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPGgyPlNlcmllczwvaDI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoYW5uZWxzXCI+XHJcbiAgICAgICAgICAgIHsgc2VyaWVzLm1hcCgoc2VyaWUpID0+IChcclxuICAgICAgICAgICAgICA8TGluayBocmVmPXtgL2NoYW5uZWw/aWQ9JHsgc2VyaWUuaWQgfWB9IHByZWZldGNoPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwiY2hhbm5lbFwiPlxyXG4gICAgICAgICAgICAgICAgICA8aW1nIHNyYz17IHNlcmllLnVybHMubG9nb19pbWFnZS5vcmlnaW5hbCB9IGFsdD1cIlwiLz5cclxuICAgICAgICAgICAgICAgICAgPGgyPnsgc2VyaWUudGl0bGUgfTwvaDI+XHJcbiAgICAgICAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICApKX1cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICB9XHJcblxyXG4gICAgICA8aDI+VWx0aW1vcyBQb2RjYXN0czwvaDI+XHJcbiAgICAgIHsgYXVkaW9DbGlwcy5tYXAoKGNsaXApID0+IChcclxuICAgICAgICA8TGluayBocmVmPXtgL3BvZGNhc3Q/aWQ9JHtjbGlwLmlkfWB9IHByZWZldGNoIGtleT17Y2xpcC5pZH0+XHJcbiAgICAgICAgICA8YSBjbGFzc05hbWU9J3BvZGNhc3QnPlxyXG4gICAgICAgICAgICA8aDM+eyBjbGlwLnRpdGxlIH08L2gzPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nbWV0YSc+XHJcbiAgICAgICAgICAgICAgeyBNYXRoLmNlaWwoY2xpcC5kdXJhdGlvbiAvIDYwKSB9IG1pbnV0ZXNcclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgPC9MaW5rPlxyXG4gICAgICApKX1cclxuXHJcblxyXG4gICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgIGhlYWRlcntcclxuICAgICAgICBjb2xvcjojZmZmO1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XHJcbiAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgIH1cclxuICAgIC5jaGFubmVscyB7XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLWdhcDogMTVweDtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZmlsbCwgbWlubWF4KDE2MHB4LCAxZnIpKTtcclxuICAgICAgfVxyXG4gICAgLmNoYW5uZWwge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsMCwwLDAuMTUpO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDAuNWVtO1xyXG4gICAgfVxyXG5cclxufVxyXG4uY2hhbm5lbCBpbWcge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmgxe1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuaDIge1xyXG4gIHBhZGRpbmc6IDVweDtcclxuICBmb250LXNpemU6IDAuOWVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuICAgIGB9PC9zdHlsZT5cclxuICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXHJcbiAgICBib2R5IHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IHN5c3RlbS11aTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBgfTwvc3R5bGU+XHJcbiAgIDwvZGl2PlxyXG4gICAgXHJcbn1cclxufSJdfQ== */\\n/*@ sourceURL=D:\\\\\\\\cursos react\\\\\\\\podcasts\\\\\\\\pages\\\\\\\\channel.js */\"));\n  }\n\n}","map":{"version":3,"sources":["D:/cursos react/podcasts/pages/channel.js"],"names":["Error","Link","Layout","ChannelGrid","PodcastsList","React","Component","getInitialProps","query","idChannel","id","reqChannel","reqSeries","reqAudios","Promise","all","fetch","status","channel","audioClips","series","statusCode","dataChannel","json","body","dataAudios","audio_clips","dataSeries","channels","e","render","props","backgroundImage","urls","banner_image","original","title","length","map","serie","logo_image","clip","Math","ceil","duration"],"mappings":"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","sourcesContent":["import Error from 'next/error'\r\nimport Link from 'next/link'\r\nimport Layout from '../components/Layout'\r\nimport ChannelGrid from '../components/ChannelGrid'\r\nimport PodcastsList from '../components/PodcastList'\r\n\r\nexport default class extends React.Component{\r\n\r\n    static async getInitialProps({ query }) {\r\n    let idChannel = query.id\r\n\r\n    try {\r\n\r\n    let [reqChannel, reqSeries, reqAudios] = await Promise.all([\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\r\n    ])\r\n\r\n    if( reqChannel.status >= 404 ){\r\n      return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\r\n    }\r\n\r\n    let dataChannel = await reqChannel.json()\r\n    let channel = dataChannel.body.channel\r\n\r\n    let dataAudios = await reqAudios.json()\r\n    let audioClips = dataAudios.body.audio_clips\r\n\r\n    let dataSeries = await reqSeries.json()\r\n    let series = dataSeries.body.channels\r\n\r\n    return { channel, audioClips, series, statusCode: 200 }\r\n    }catch(e){\r\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\r\n    }\r\n\r\n    }\r\n\r\n    render(){\r\n      const { channel, audioClips, series, statusCode } =this.props\r\n\r\n      if( statusCode !== 200 ){\r\n        return <Error statusCode={statusCode} />\r\n         }\r\n        return <div>\r\n        <header>Podcasts</header>\r\n\r\n        <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\r\n\r\n      <h1>{ channel.title }</h1>\r\n\r\n      { series.length > 0 &&\r\n        <div>\r\n          <h2>Series</h2>\r\n          <div className=\"channels\">\r\n            { series.map((serie) => (\r\n              <Link href={`/channel?id=${ serie.id }`} prefetch>\r\n                <a className=\"channel\">\r\n                  <img src={ serie.urls.logo_image.original } alt=\"\"/>\r\n                  <h2>{ serie.title }</h2>\r\n                </a>\r\n              </Link>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      <h2>Ultimos Podcasts</h2>\r\n      { audioClips.map((clip) => (\r\n        <Link href={`/podcast?id=${clip.id}`} prefetch key={clip.id}>\r\n          <a className='podcast'>\r\n            <h3>{ clip.title }</h3>\r\n            <div className='meta'>\r\n              { Math.ceil(clip.duration / 60) } minutes\r\n            </div>\r\n          </a>\r\n        </Link>\r\n      ))}\r\n\r\n\r\n        <style jsx>{`\r\n    header{\r\n        color:#fff;\r\n        background: #8756ca;\r\n        padding: 15px;\r\n    }\r\n    .channels {\r\n        display: grid;\r\n        grid-gap: 15px;\r\n        padding: 15px;\r\n        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n      }\r\n    .channel {\r\n        display: block;\r\n        border-radius: 3px;\r\n        box-shadow: 0px 2px 6px rgba(0,0,0,0.15);\r\n        margin-bottom: 0.5em;\r\n    }\r\n\r\n}\r\n.channel img {\r\n  width: 100%;\r\n}\r\nh1{\r\n    font-weight: 600;\r\n    padding: 15px;\r\n}\r\nh2 {\r\n  padding: 5px;\r\n  font-size: 0.9em;\r\n  font-weight: 600;\r\n  margin: 0;\r\n  text-align: center;\r\n}\r\n\r\n    `}</style>\r\n    <style jsx global>{`\r\n    body {\r\n        margin: 0;\r\n        font-family: system-ui;\r\n        background: white;\r\n        text-align: center;\r\n    }\r\n    `}</style>\r\n   </div>\r\n    \r\n}\r\n}"]},"metadata":{},"sourceType":"module"}